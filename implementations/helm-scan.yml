scan-helm-config:
  stage: test
  image:
    name: ${MCICD_DOCKERHUB_MIRROR}aquasec/trivy
    entrypoint: [""]
  variables:
    HELM_CHARTS_PATH: "./"
  script:
    - trivy config --format json --output "trivy-container-scanning-report.json" $HELM_CHARTS_PATH
  artifacts:
    paths:
      - "trivy-container-scanning-report.json"

scan-helm-config-upload:
  extends:
    - .safescarf_upload
    - scan-helm-config
  needs: ["safescarf_create_engagement", "scan-helm-config"]
  stage: !reference [.safescarf_upload, stage]
  image: !reference [.safescarf_upload, image]
  before_script: !reference [.safescarf_upload, before_script]
  script: !reference [.safescarf_upload, script]
  artifacts: null
  dependencies: null
  variables:
    SAFESCARF_SCAN_TYPE: "Trivy Scan"
    SAFESCARF_SCAN_FILE: trivy-container-scanning-report.json
    SAFESCARF_SCAN_TITLE: "Helm Config Scan"
    SAFESCARF_TAGS: "gitlab-ci;type:iac"
  rules:
    - when: always

scan-helm-images-prepare:
  stage: test
  image:
    name: ${MCICD_DOCKERHUB_MIRROR}alpine/helm
    entrypoint: [""]
  variables:
    HELM_CHARTS_PATH: "./"
  script:
    - 'helm template $HELM_CHARTS_PATH | grep ''^[ -]*image:'' | cut -d: -f 2- | tr -d '' "'' | sort -u > ./images.lst'
    - cat images.lst
  artifacts:
    when: always
    paths:
      - images.lst

scan-helm-images:
  stage: test
  image:
    name: ${MCICD_DOCKERHUB_MIRROR}anchore/grype:v0.65.2-debug
    entrypoint: [""]
  needs:
    - scan-helm-images-prepare
  script:
    - |
      for IMAGE in $(cat images.lst); do
        /grype ${IMAGE} -o json > grype-out.$(echo ${IMAGE} | tr '/:"' '_').json
        echo "grype-out.$(echo ${IMAGE} | tr '/:\"' '_').json;${IMAGE/:/;}" >> results.csv
      done
  artifacts:
    when: always
    paths:
      - grype-out.*.json
      - results.csv

scan-helm-images-upload:
  extends:
    - safescarf_publish
    - scan-helm-images
  needs:
    - "safescarf_create_engagement"
    - "scan-helm-images"
  stage: !reference [.safescarf_upload, stage]
  image: !reference [.safescarf_upload, image]
  before_script: !reference [.safescarf_upload, before_script]
  artifacts: null
  dependencies: null
  variables:
    SAFESCARF_SCAN_TYPE: "Anchore Grype"
    SAFESCARF_TAGS: "gitlab-ci;type:container"
  script:
    - for LINE in $(cat results.csv); do python /app/safescarf-connector.py --workflow ${SAFESCARF_WORKFLOW} --environment ${SAFESCARF_SCAN_ENVIRONMENT} --tags "${SAFESCARF_TAGS}" --engagement-id ${SAFESCARF_ENGAGEMENT_ID} --product-id ${SAFESCARF_PRODUCT_ID} --scan-type "${SAFESCARF_SCAN_TYPE}" --name "$(echo "$LINE" | awk -F';' '{print $2}')" --service "$(echo "$LINE" | awk -F';' '{print $2}')" --version "$(echo "$LINE" | awk -F';' '{print $3}')" upload "$(echo "$LINE" | awk -F';' '{print $1}')"; done
  rules:
    - when: always
