anchore-engine:
  stage: test
  image:
    name: anchore/anchore-engine:latest
    entrypoint: [""]
  services:
    - name: anchore/engine-db-preload-slim:latest
      alias: anchore-db
  variables:
    GIT_STRATEGY: none
    POSTGRES_PASSWORD: "mysecretkey"
    POSTGRES_HOST_AUTH_METHOD: trust
    ANCHORE_HOST_ID: "localhost"
    ANCHORE_DB_HOST: "anchore-db"
    ANCHORE_DB_PASSWORD: "mysecretkey"
    ANCHORE_ENDPOINT_HOSTNAME: "localhost"
    ANCHORE_CLI_USER: "admin"
    ANCHORE_CLI_PASS: "foobar"
    ANCHORE_CLI_SSL_VERIFY: "n"
    ANCHORE_ADMIN_PASSWORD: "foobar"
    ANCHORE_FAIL_ON_POLICY: "false"
    ANCHORE_TIMEOUT: 500
  script:
    - |
        curl -o /tmp/anchore_ci_tools.py https://raw.githubusercontent.com/anchore/ci-tools/master/scripts/anchore_ci_tools.py
        chmod +x /tmp/anchore_ci_tools.py
        sed -i 's/get_config()/#get_config()/' /tmp/anchore_ci_tools.py
        sed -i 's/anchore-cli/anchore-cli\ \-\-config\ \/tmp\/config\/config.yaml/g' /tmp/anchore_ci_tools.py
        sed -i 's/anchore-manager service/anchore-manager --configdir \/tmp\/config\/ service/g' /tmp/anchore_ci_tools.py
        mkdir /tmp/config/
        curl -o /tmp/config/config.yaml https://raw.githubusercontent.com/anchore/ci-tools/master/conf/stateless_ci_config.yaml
    - /tmp/anchore_ci_tools.py --setup
    - anchore-cli --u admin --p foobar registry add $CI_REGISTRY gitlab-ci-token $CI_JOB_TOKEN --skip-validate
    - /tmp/anchore_ci_tools.py --analyze --report --image "$IMAGE_NAME" --timeout "$ANCHORE_TIMEOUT"
    - |
        if [ "$ANCHORE_FAIL_ON_POLICY" == "true" ]; then
          anchore-cli evaluate check ${IMAGE_NAME}
        else
          set +o pipefail
          anchore-cli evaluate check ${IMAGE_NAME} | tee /dev/null
        fi
    - find anchore-reports/ -name "*-vuln.json" -exec echo "ANCHORE_REPORT_FILE={}" > anchore-engine.env \;
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}
    paths:
      - anchore-reports/*
    reports:
      dotenv: anchore-engine.env
  rules:
    - if: '"$SAFESCARF_ANCHORE_DISABLE" == "true"'
      when: never
    - when: always

anchore_engine_defectdojo:
  extends: .defectdojo_upload 
  needs: ["defectdojo_create_engagement", "anchore-engine"]
  allow_failure: true
  variables:
    SAFESCARF_SCAN_TYPE: "Anchore Engine Scan"
    SAFESCARF_SCAN_TEST_TYPE: "GitLab-CI Anchore Engine"
    SAFESCARF_SCAN_FILE: "./${ANCHORE_REPORT_FILE}"
  rules:
    - if: '$SAFESCARF_NOT_ON_MASTER == "true" && $CI_COMMIT_BRANCH == "master"'
      when: never
    - if: '"$SAFESCARF_ANCHORE_DISABLE" == "true"'
      when: never
    - when: always
