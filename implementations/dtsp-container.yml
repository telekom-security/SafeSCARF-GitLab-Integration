variables:
    DTSP_RESULT_FILE: "dtsp-scanresults.json"
    DTSP_URL: "https://dtsp.telekom-dienste.de"
    DTSP_API_KEY: ""

dtsp_scan:
  image: alpine:3
  stage: test
  variables:
    DTSP_REGISTRY_PW: ""
    DTSP_REGISTRY_TOKEN: ""
    DTSP_REGISTRY_USER: ""
    DTSP_IMAGE: ""
    #http_proxy: http://proxy.t-seclab.de:3128
    #https_proxy: http://proxy.t-seclab.de:3128
    #HTTP_PROXY: http://proxy.t-seclab.de:3128
    #HTTPS_PROXY: http://proxy.t-seclab.de:3128
  script:
    - USER_FLAG=$(test -n "$DTSP_REGISTRY_USER" && echo "--registry-user $DTSP_REGISTRY_USER" || echo "")
    - PASSWORD_FLAG=$(test -n "$DTSP_REGISTRY_PW" && echo "--registry-pw $DTSP_REGISTRY_PW" || echo "")
    - TOKEN_FLAG=$(test -n "$DTSP_REGISTRY_TOKEN" && echo "--registry_token $DTSP_REGISTRY_TOKEN" || echo "")
    - apk add --no-cache curl
    - curl -O https://dtsp.telekom-dienste.de/resources/clients/cli_linux_amd64
    - chmod +x cli_linux_amd64
    - ./cli_linux_amd64 scan container image_tag $DTSP_IMAGE -u https://dtsp.telekom-dienste.de -t $DTSP_API_KEY -f $DTSP_RESULT_FILE $PASSWORD_FLAG $TOKEN_FLAG $USER_FLAG
  allow_failure: true
  artifacts:
    when: always
    paths:
      - $DTSP_RESULT_FILE


dtsp_scan_upload:
  extends:
    - .safescarf_upload
    - dtsp_scan
  needs: ["safescarf_create_engagement", "dtsp_scan"]
  stage: !reference [.safescarf_upload, stage]
  image: !reference [.safescarf_upload, image]
  before_script: !reference [.safescarf_upload, before_script]
  script: !reference [.safescarf_upload, script]
  artifacts: null
  dependencies: null
  variables:
    SAFESCARF_SCAN_TYPE: "Anchore Grype"
    SAFESCARF_SCAN_FILE: $DTSP_RESULT_FILE
    SAFESCARF_SCAN_TITLE: "DTSP Container Scan"
    SAFESCARF_TAGS: "gitlab-ci;type:container;dtsp"
